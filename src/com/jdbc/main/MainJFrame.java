/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jdbc.main;

import java.sql.*;
import javax.swing.table.*;
import javax.swing.*;

/**
 * @since December 18, 2023
 * @author Jareth Baur
 */
public class MainJFrame extends javax.swing.JFrame {

    private static final String URL = "jdbc:mysql://localhost:3306/oop_jdbc";

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    private static Connection connect() {
        try {
            return DriverManager.getConnection(URL);
        } catch (SQLException e) {

            System.out.println("Error connecting to the database: " + e.getMessage());
            throw new RuntimeException("Database connection error", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnForDelete = new javax.swing.JButton();
        labelForLastName = new javax.swing.JLabel();
        txtfieldForFirstName = new javax.swing.JTextField();
        labelForID = new javax.swing.JLabel();
        txtfieldForLastName = new javax.swing.JTextField();
        txtfieldForID = new javax.swing.JTextField();
        labelForAddress = new javax.swing.JLabel();
        txtfieldForAddress = new javax.swing.JTextField();
        btnForAddingEmployee = new javax.swing.JButton();
        btnForCancel = new javax.swing.JButton();
        labelForFirstName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableForEmployee = new javax.swing.JTable();
        btnForSavingChanges = new javax.swing.JButton();
        btnForRefreshingTable = new javax.swing.JButton();
        btnForExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableForPeripheral = new javax.swing.JTable();
        btnForCancel1 = new javax.swing.JButton();
        labelForPeripheralName = new javax.swing.JLabel();
        btnForSavingChanges1 = new javax.swing.JButton();
        btnForDelete1 = new javax.swing.JButton();
        labelForType = new javax.swing.JLabel();
        txtfieldForPeripheralName = new javax.swing.JTextField();
        labelForPeripheralID = new javax.swing.JLabel();
        txtfieldForType = new javax.swing.JTextField();
        txtfieldForPeripheralID = new javax.swing.JTextField();
        labelForAssigned = new javax.swing.JLabel();
        btnForAddingPeripheral = new javax.swing.JButton();
        txtfieldForAssigned = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setResizable(false);

        btnForDelete.setBackground(new java.awt.Color(204, 204, 204));
        btnForDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnForDelete.setText("Delete");
        btnForDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForDeleteActionPerformed(evt);
            }
        });

        labelForLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForLastName.setForeground(new java.awt.Color(102, 102, 102));
        labelForLastName.setText("Last Name:");

        txtfieldForFirstName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtfieldForFirstNameMouseExited(evt);
            }
        });
        txtfieldForFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForFirstNameActionPerformed(evt);
            }
        });

        labelForID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForID.setForeground(new java.awt.Color(102, 102, 102));
        labelForID.setText("Employee ID:");

        txtfieldForLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForLastNameActionPerformed(evt);
            }
        });

        txtfieldForID.setEditable(false);
        txtfieldForID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtfieldForID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtfieldForIDMouseClicked(evt);
            }
        });
        txtfieldForID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForIDActionPerformed(evt);
            }
        });
        txtfieldForID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfieldForIDKeyTyped(evt);
            }
        });

        labelForAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForAddress.setForeground(new java.awt.Color(102, 102, 102));
        labelForAddress.setText("Address:");

        txtfieldForAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForAddressActionPerformed(evt);
            }
        });

        btnForAddingEmployee.setBackground(new java.awt.Color(204, 204, 204));
        btnForAddingEmployee.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForAddingEmployee.setForeground(new java.awt.Color(0, 204, 51));
        btnForAddingEmployee.setText("Add new employee");
        btnForAddingEmployee.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForAddingEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForAddingEmployeeActionPerformed(evt);
            }
        });

        btnForCancel.setBackground(new java.awt.Color(204, 204, 204));
        btnForCancel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForCancel.setText("Cancel");
        btnForCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForCancel.setMaximumSize(new java.awt.Dimension(43, 25));
        btnForCancel.setMinimumSize(new java.awt.Dimension(43, 25));
        btnForCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForCancelActionPerformed(evt);
            }
        });

        labelForFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForFirstName.setForeground(new java.awt.Color(102, 102, 102));
        labelForFirstName.setText("First Name:");

        tableForEmployee.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tableForEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableForEmployee.setFocusable(false);
        tableForEmployee.setGridColor(new java.awt.Color(0, 0, 0));
        tableForEmployee.setShowGrid(true);
        tableForEmployee.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tableForEmployeeComponentAdded(evt);
            }
        });
        tableForEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableForEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableForEmployee);

        btnForSavingChanges.setBackground(new java.awt.Color(204, 204, 204));
        btnForSavingChanges.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForSavingChanges.setText("Save Changes");
        btnForSavingChanges.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForSavingChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForSavingChangesActionPerformed(evt);
            }
        });

        btnForRefreshingTable.setBackground(new java.awt.Color(204, 204, 204));
        btnForRefreshingTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForRefreshingTable.setForeground(new java.awt.Color(0, 204, 51));
        btnForRefreshingTable.setText("Read Records");
        btnForRefreshingTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForRefreshingTable.setMaximumSize(new java.awt.Dimension(27, 25));
        btnForRefreshingTable.setMinimumSize(new java.awt.Dimension(27, 25));
        btnForRefreshingTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForRefreshingTableActionPerformed(evt);
            }
        });

        btnForExit.setBackground(new java.awt.Color(204, 204, 204));
        btnForExit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForExit.setForeground(new java.awt.Color(255, 0, 0));
        btnForExit.setText("Exit");
        btnForExit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForExit.setMaximumSize(new java.awt.Dimension(27, 25));
        btnForExit.setMinimumSize(new java.awt.Dimension(27, 25));
        btnForExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForExitActionPerformed(evt);
            }
        });

        tableForPeripheral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Peripheral ID", "Name", "Type", "Assigned"
            }
        ));
        tableForPeripheral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableForPeripheralMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableForPeripheral);

        btnForCancel1.setBackground(new java.awt.Color(204, 204, 204));
        btnForCancel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForCancel1.setText("Cancel");
        btnForCancel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForCancel1.setMaximumSize(new java.awt.Dimension(43, 25));
        btnForCancel1.setMinimumSize(new java.awt.Dimension(43, 25));
        btnForCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForCancel1ActionPerformed(evt);
            }
        });

        labelForPeripheralName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForPeripheralName.setForeground(new java.awt.Color(102, 102, 102));
        labelForPeripheralName.setText("Name:");

        btnForSavingChanges1.setBackground(new java.awt.Color(204, 204, 204));
        btnForSavingChanges1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForSavingChanges1.setText("Save Changes");
        btnForSavingChanges1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForSavingChanges1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForSavingChanges1ActionPerformed(evt);
            }
        });

        btnForDelete1.setBackground(new java.awt.Color(204, 204, 204));
        btnForDelete1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForDelete1.setForeground(new java.awt.Color(255, 0, 0));
        btnForDelete1.setText("Delete");
        btnForDelete1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForDelete1ActionPerformed(evt);
            }
        });

        labelForType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForType.setForeground(new java.awt.Color(102, 102, 102));
        labelForType.setText("Type");

        txtfieldForPeripheralName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtfieldForPeripheralNameMouseExited(evt);
            }
        });
        txtfieldForPeripheralName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForPeripheralNameActionPerformed(evt);
            }
        });

        labelForPeripheralID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForPeripheralID.setForeground(new java.awt.Color(102, 102, 102));
        labelForPeripheralID.setText("Peripheral ID:");

        txtfieldForType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForTypeActionPerformed(evt);
            }
        });

        txtfieldForPeripheralID.setEditable(false);
        txtfieldForPeripheralID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtfieldForPeripheralID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtfieldForPeripheralIDMouseClicked(evt);
            }
        });
        txtfieldForPeripheralID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForPeripheralIDActionPerformed(evt);
            }
        });
        txtfieldForPeripheralID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfieldForPeripheralIDKeyTyped(evt);
            }
        });

        labelForAssigned.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelForAssigned.setForeground(new java.awt.Color(102, 102, 102));
        labelForAssigned.setText("Assigned:");

        btnForAddingPeripheral.setBackground(new java.awt.Color(204, 204, 204));
        btnForAddingPeripheral.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForAddingPeripheral.setForeground(new java.awt.Color(0, 204, 51));
        btnForAddingPeripheral.setText("Add new peripheral");
        btnForAddingPeripheral.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnForAddingPeripheral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForAddingPeripheralActionPerformed(evt);
            }
        });

        txtfieldForAssigned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldForAssignedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnForRefreshingTable, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(btnForExit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnForDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnForCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelForType)
                                    .addComponent(labelForAssigned)
                                    .addComponent(labelForPeripheralName, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelForPeripheralID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtfieldForType, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(txtfieldForPeripheralName)
                                    .addComponent(txtfieldForPeripheralID)
                                    .addComponent(txtfieldForAssigned))))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnForDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnForSavingChanges1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForAddingPeripheral, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnForSavingChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelForLastName)
                                    .addComponent(labelForAddress)
                                    .addComponent(labelForFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                    .addComponent(labelForID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtfieldForLastName)
                                    .addComponent(txtfieldForAddress)
                                    .addComponent(txtfieldForFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(txtfieldForID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnForAddingEmployee))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtfieldForAddress, txtfieldForFirstName, txtfieldForID, txtfieldForLastName});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelForAddress, labelForFirstName, labelForID, labelForLastName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForID)
                            .addComponent(txtfieldForID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForFirstName)
                            .addComponent(txtfieldForFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForLastName)
                            .addComponent(txtfieldForLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForAddress)
                            .addComponent(txtfieldForAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnForSavingChanges, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForAddingEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForPeripheralID)
                            .addComponent(txtfieldForPeripheralID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForPeripheralName)
                            .addComponent(txtfieldForPeripheralName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForType)
                            .addComponent(txtfieldForType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelForAssigned)
                            .addComponent(txtfieldForAssigned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnForSavingChanges1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnForAddingPeripheral, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnForExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnForRefreshingTable, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtfieldForAddress, txtfieldForFirstName, txtfieldForID, txtfieldForLastName});

        setSize(new java.awt.Dimension(726, 486));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnForDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForDeleteActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Do you really want to delete this record?", "Select an option", JOptionPane.YES_NO_CANCEL_OPTION);
        if (response == 0) {
            String deleteSQL = "DELETE FROM employee WHERE id=?";
            try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(deleteSQL)) {

                statement.setString(1, txtfieldForID.getText());
                int affectedRows = statement.executeUpdate();

                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Record deleted successfully.");
                    clearTextFields();
                    resetEmployeeID();
                    refreshTable();
                } else {
                    JOptionPane.showMessageDialog(null, "There was an error deleting the record.");
                }

            } catch (SQLException e) {
                System.out.println("Error: " + e.getMessage());
            }
        } else {
        }
    }//GEN-LAST:event_btnForDeleteActionPerformed

    private void txtfieldForFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForFirstNameActionPerformed

    private void txtfieldForLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForLastNameActionPerformed

    private void txtfieldForIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForIDActionPerformed

    private void txtfieldForAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForAddressActionPerformed

    private void btnForCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForCancelActionPerformed
        clearTextFields();
    }//GEN-LAST:event_btnForCancelActionPerformed

    private void tableForEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableForEmployeeMouseClicked
        try {
            int index = tableForEmployee.getSelectedRow();
            TableModel model = tableForEmployee.getModel();
            String id = model.getValueAt(index, 0).toString();
            String firstName = model.getValueAt(index, 1).toString();
            String lastName = model.getValueAt(index, 2).toString();
            String address = model.getValueAt(index, 3).toString();
            txtfieldForID.setText(id);
            txtfieldForFirstName.setText(firstName);
            txtfieldForLastName.setText(lastName);
            txtfieldForAddress.setText(address);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tableForEmployeeMouseClicked

    private void btnForAddingEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForAddingEmployeeActionPerformed
        // TODO add your handling code here:
        CreateFrameForm cff = new CreateFrameForm();
        cff.show();
    }//GEN-LAST:event_btnForAddingEmployeeActionPerformed

    private void tableForEmployeeComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tableForEmployeeComponentAdded

    }//GEN-LAST:event_tableForEmployeeComponentAdded

    public static void createNewStudent(Object[] data) {
        DefaultTableModel model = (DefaultTableModel) tableForEmployee.getModel();
        model.addRow(data);
    }
    private void btnForRefreshingTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForRefreshingTableActionPerformed
        refreshTable();
    }//GEN-LAST:event_btnForRefreshingTableActionPerformed

    private void btnForSavingChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForSavingChangesActionPerformed
        String updateSQL = "UPDATE employee SET firstname=?, lastname=?, address=? WHERE id=?";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(updateSQL)) {
            statement.setString(1, txtfieldForFirstName.getText());
            statement.setString(2, txtfieldForLastName.getText());
            statement.setString(3, txtfieldForAddress.getText());
            statement.setString(4, txtfieldForID.getText());
            if (txtfieldForFirstName.getText().isBlank() || txtfieldForLastName.getText().isBlank() || txtfieldForAddress.getText().isBlank() || isAssignedTrue(txtfieldForAssigned.getText())) {
                JOptionPane.showMessageDialog(null, "There was an error updating the record.");
            } else {
                statement.executeUpdate();
                int affectedRows = statement.executeUpdate();
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Record updated successfully.");
                    refreshTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Record not saved.");
                }
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        clearTextFields();
    }//GEN-LAST:event_btnForSavingChangesActionPerformed

    private void btnForExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForExitActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_btnForExitActionPerformed

    private void txtfieldForIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtfieldForIDMouseClicked
        if (!txtfieldForID.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Student ID cannot be modified.");
        }
    }//GEN-LAST:event_txtfieldForIDMouseClicked

    private void txtfieldForFirstNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtfieldForFirstNameMouseExited

    }//GEN-LAST:event_txtfieldForFirstNameMouseExited

    private void txtfieldForIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfieldForIDKeyTyped
        JOptionPane.showMessageDialog(null, "Student ID cannot be modified.");
    }//GEN-LAST:event_txtfieldForIDKeyTyped

    private void btnForCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForCancel1ActionPerformed
        clearTextFields();
    }//GEN-LAST:event_btnForCancel1ActionPerformed

    private void btnForSavingChanges1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForSavingChanges1ActionPerformed
        String updateSQL = "UPDATE peripheral SET name=?, type=?, assigned=? WHERE id=?";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(updateSQL)) {
            statement.setString(1, txtfieldForPeripheralName.getText());
            statement.setString(2, txtfieldForType.getText());
            statement.setString(3, txtfieldForAssigned.getText());
            statement.setString(4, txtfieldForPeripheralID.getText());
            if (txtfieldForPeripheralName.getText().isBlank() || txtfieldForType.getText().isBlank()|| !MainJFrame.isAssignedTrue(txtfieldForAssigned.getText())) {
                JOptionPane.showMessageDialog(null, "There was an error updating the record.");
            } else {
                statement.executeUpdate();
                int affectedRows = statement.executeUpdate();
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Record updated successfully.");
                    refreshTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Record not saved.");
                }
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        clearTextFields();
    }//GEN-LAST:event_btnForSavingChanges1ActionPerformed

    private void btnForDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForDelete1ActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Do you really want to delete this record?", "Select an option", JOptionPane.YES_NO_CANCEL_OPTION);
        if (response == 0) {
            String deleteSQL = "DELETE FROM peripheral WHERE id=?";
            try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(deleteSQL)) {

                statement.setString(1, txtfieldForPeripheralID.getText());
                int affectedRows = statement.executeUpdate();

                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Record deleted successfully.");
                    clearTextFields();
                    resetPeripheralID();
                } else {
                    JOptionPane.showMessageDialog(null, "There was an error deleting the record.");
                }

            } catch (SQLException e) {
                System.out.println("Error: " + e.getMessage());
            }
        } else {
        }
    }//GEN-LAST:event_btnForDelete1ActionPerformed

    private void txtfieldForPeripheralNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtfieldForPeripheralNameMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForPeripheralNameMouseExited

    private void txtfieldForPeripheralNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForPeripheralNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForPeripheralNameActionPerformed

    private void txtfieldForTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForTypeActionPerformed

    private void txtfieldForPeripheralIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtfieldForPeripheralIDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForPeripheralIDMouseClicked

    private void txtfieldForPeripheralIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForPeripheralIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForPeripheralIDActionPerformed

    private void txtfieldForPeripheralIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfieldForPeripheralIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForPeripheralIDKeyTyped

    private void btnForAddingPeripheralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForAddingPeripheralActionPerformed
        // TODO add your handling code here:
        AddNewPeripheral anp = new AddNewPeripheral();
        anp.show();
    }//GEN-LAST:event_btnForAddingPeripheralActionPerformed

    private void tableForPeripheralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableForPeripheralMouseClicked
        try {
            int index = tableForPeripheral.getSelectedRow();
            TableModel model = tableForPeripheral.getModel();
            String id = model.getValueAt(index, 0).toString();
            String name = model.getValueAt(index, 1).toString();
            String type = model.getValueAt(index, 2).toString();
            String assigned = model.getValueAt(index, 3).toString();
            txtfieldForPeripheralID.setText(id);
            txtfieldForPeripheralName.setText(name);
            txtfieldForType.setText(type);
            txtfieldForAssigned.setText(assigned);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tableForPeripheralMouseClicked

    private void txtfieldForAssignedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldForAssignedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldForAssignedActionPerformed
    private void clearTextFields() {
        txtfieldForID.setText("");
        txtfieldForFirstName.setText("");
        txtfieldForLastName.setText("");
        txtfieldForAddress.setText("");
        txtfieldForPeripheralID.setText("");
        txtfieldForPeripheralName.setText("");
        txtfieldForType.setText("");
        txtfieldForAssigned.setText("");
    }

    public static void refreshTable() {
        resetEmployeeID();
        resetPeripheralID();
        String columns[] = {
            "Employee ID", "First Name", "Last Name", "Address"
        };
        String data[][];
        String selectSQL = "SELECT * FROM employee";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(selectSQL); ResultSet resultSet = statement.executeQuery()) {
            int count = 0;
            data = new String[10][4];
            while (resultSet.next()) {
                data[count][0] = resultSet.getInt("id") + "";
                data[count][1] = resultSet.getString("firstname");
                data[count][2] = resultSet.getString("lastname");
                data[count][3] = resultSet.getString("address");
                count++;
            }
            TableModel tm = new DefaultTableModel(data, columns);
            tableForEmployee.setModel(tm);
        } catch (SQLException ex) {
        }

        String columns1[] = {
            "Peripheral ID", "Name", "Type", "Assigned"
        };
        String data1[][];
        data1 = null;
        String selectSQL1 = "SELECT * FROM peripheral";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(selectSQL1); ResultSet resultSet = statement.executeQuery()) {
            int count = 0;
            data1 = new String[10][4];
            while (resultSet.next()) {
                data1[count][0] = resultSet.getInt("id") + "";
                data1[count][1] = resultSet.getString("name");
                data1[count][2] = resultSet.getString("type");
                data1[count][3] = resultSet.getString("assigned");
                count++;
            }
            TableModel tm = new DefaultTableModel(data1, columns1);
            tableForPeripheral.setModel(tm);
        } catch (SQLException ex) {
        }
    }

    public static void resetPeripheralID() {
        String selectSQL1;
        selectSQL1 = """
                     SET @num := 0;
                      peripheral SET id = @num := (@num+1);
                     TABLE peripheral AUTO_INCREMENT = 1;""";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(selectSQL1); ResultSet resultSet = statement.executeQuery()) {
            statement.executeUpdate();
            refreshTable();
        } catch (SQLException ex) {
        }
    }

    public static void resetEmployeeID() {
        String selectSQL1;
        selectSQL1 = """
                     SET @num := 0;
                      employee SET ID = @num := (@num+1);
                     TABLE employee AUTO_INCREMENT = 1;""";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(selectSQL1); ResultSet resultSet = statement.executeQuery()) {
            statement.executeUpdate();
            refreshTable();
        } catch (SQLException ex) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new MainJFrame().setVisible(true);
        });
    }

    public static boolean isAssignedTrue(String firstName) {
        String selectSQL = "SELECT * FROM employee";
        try (Connection connection = connect(); PreparedStatement statement = connection.prepareStatement(selectSQL); ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                if (resultSet.getString("firstname").equalsIgnoreCase(firstName)) {
                    return true;
                }
            }
            return false;
        } catch (SQLException ex) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnForAddingEmployee;
    private javax.swing.JButton btnForAddingPeripheral;
    private javax.swing.JButton btnForCancel;
    private javax.swing.JButton btnForCancel1;
    private javax.swing.JButton btnForDelete;
    private javax.swing.JButton btnForDelete1;
    private javax.swing.JButton btnForExit;
    private javax.swing.JButton btnForRefreshingTable;
    private javax.swing.JButton btnForSavingChanges;
    private javax.swing.JButton btnForSavingChanges1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelForAddress;
    private javax.swing.JLabel labelForAssigned;
    private javax.swing.JLabel labelForFirstName;
    private javax.swing.JLabel labelForID;
    private javax.swing.JLabel labelForLastName;
    private javax.swing.JLabel labelForPeripheralID;
    private javax.swing.JLabel labelForPeripheralName;
    private javax.swing.JLabel labelForType;
    private static javax.swing.JTable tableForEmployee;
    private static javax.swing.JTable tableForPeripheral;
    private javax.swing.JTextField txtfieldForAddress;
    private javax.swing.JTextField txtfieldForAssigned;
    private javax.swing.JTextField txtfieldForFirstName;
    private javax.swing.JTextField txtfieldForID;
    private javax.swing.JTextField txtfieldForLastName;
    private javax.swing.JTextField txtfieldForPeripheralID;
    private javax.swing.JTextField txtfieldForPeripheralName;
    private javax.swing.JTextField txtfieldForType;
    // End of variables declaration//GEN-END:variables
}
